generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  User_id    Int      @unique
  User_email String   @unique
  User_fname String?
  User_lname String?
  role       String
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  id         Int      @id @default(autoincrement())
}

model officialdocument {
  id        Int      @id @default(autoincrement())
  D_id      String   @unique
  D_date    DateTime
  D_from    String
  D_story   String
  D_time    DateTime
  D_type    String
  D_to      String
  D_comment String
  D_file    String?
}


model officialletter {
  id          Int      @id @default(autoincrement())
  L_id        String  @unique
  L_date      DateTime
  L_from      String
  L_story     String
  L_time      String
  L_type      String 
  L_to        String
  L_comment   String
  L_file      String?


}

model postnotice {
  P_institute Int
  P_id        String
  P_date1     DateTime
  P_story     String
  P_website   String
  P_date2     DateTime
  P_time      String
  P_endorser  String
  P_comment   String
  id          Int      @id @default(autoincrement())
}

model event_calendar {
  event_id     Int      @id @default(autoincrement()) // Unique ID for the event
  title        String   // Title of the event
  description  String?  // Description of the event (optional)
  start_date   DateTime // Start date and time of the event
  end_date     DateTime // End date and time of the event
  all_day      Boolean  // Whether the event lasts all day
  created_at   DateTime @default(now()) // Timestamp for when the event is created
  updated_at   DateTime @updatedAt      // Timestamp for when the event is updated
}


model announcements {
  id                Int      @id @default(autoincrement())
  A_date1           DateTime
  A_Agency          String
  A_Book_number     String
  A_date2           DateTime
  A_Subject         String
  A_date3           DateTime
  A_endorser1       String
  A_date4           DateTime
  A_date5           DateTime
  A_endorser2       String
  created_at   DateTime @default(now()) // Timestamp for when the event is created
  updated_at   DateTime @updatedAt 
}

